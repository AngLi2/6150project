{"version":3,"sources":["../livechatWidget.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACH,SAAS,EACT,KAAK,EAEN,MAAM,eAAA,CAAgB;AAGvB;IAAA;IAgCF,CAAC;IA7BG,0CAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,+CAAa,GAArB;QACE,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC9C,MAAM,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAChC,MAAM,CAAC,SAAS,GAAG,+EAEO,IAAI,CAAC,SAAS,oXAMvC,CAAC;QACF,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACpE,CAAC;IACI,kCAAU,GAA0B;QAC7C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACtB,QAAQ,EAAE,iBAAiB;iBAC5B,EAAG,EAAE;KACP,CAAC;IACF,kBAAkB;IACX,sCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,sCAAc,GAA2C;QAChE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC9B,CAAC;IACF,8BAAC;CAhCC,AAgCD,IAAA;SAhCc,uBAAuB","file":"livechatWidget.directive.js","sourceRoot":"","sourcesContent":["import { \n    Directive, \n    Input,\n    OnInit\n  } from '@angular/core';\n  \n  \n  export class LivechatWidgetDirective implements OnInit {\n     public licenseId: number;\n  \n    ngOnInit() {\n      this._injectScript();\n    }\n  \n    private _injectScript(): void {\n      let script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.innerHTML = `\n        window.__lc = window.__lc || {};\n        window.__lc.license = ${this.licenseId};\n        (function() {\n          var lc = document.createElement('script'); lc.type = 'text/javascript'; lc.async = true;\n          lc.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'cdn.livechatinc.com/tracking.js';\n          var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(lc, s);\n        })();\n      `;\n      document.getElementsByTagName('head').item(0).appendChild(script);\n    }\n  static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'livechat-widget'\n  }, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'licenseId': [{ type: Input },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}